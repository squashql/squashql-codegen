/*
 * This file has been generated by squashql-codegen. The project is available here https://github.com/squashql/squashql-codegen
 */
import {TableField} from "@squashql/squashql-js"

export interface SquashQLTable {
    _fields: TableField[]
    _name: string
}

class Customer implements SquashQLTable {
    readonly _name = "CUSTOMER"
    readonly cCustkey: TableField = new TableField("CUSTOMER.C_CUSTKEY")
    readonly cName: TableField = new TableField("CUSTOMER.C_NAME")
    readonly cAddress: TableField = new TableField("CUSTOMER.C_ADDRESS")
    readonly cNationkey: TableField = new TableField("CUSTOMER.C_NATIONKEY")
    readonly cPhone: TableField = new TableField("CUSTOMER.C_PHONE")
    readonly cAcctbal: TableField = new TableField("CUSTOMER.C_ACCTBAL")
    readonly cMktsegment: TableField = new TableField("CUSTOMER.C_MKTSEGMENT")
    readonly cComment: TableField = new TableField("CUSTOMER.C_COMMENT")
    readonly _fields: TableField[] = [this.cCustkey, this.cName, this.cAddress, this.cNationkey, this.cPhone, this.cAcctbal, this.cMktsegment, this.cComment]
}

class Lineitem implements SquashQLTable {
    readonly _name = "LINEITEM"
    readonly lOrderkey: TableField = new TableField("LINEITEM.L_ORDERKEY")
    readonly lPartkey: TableField = new TableField("LINEITEM.L_PARTKEY")
    readonly lSuppkey: TableField = new TableField("LINEITEM.L_SUPPKEY")
    readonly lLinenumber: TableField = new TableField("LINEITEM.L_LINENUMBER")
    readonly lQuantity: TableField = new TableField("LINEITEM.L_QUANTITY")
    readonly lExtendedprice: TableField = new TableField("LINEITEM.L_EXTENDEDPRICE")
    readonly lDiscount: TableField = new TableField("LINEITEM.L_DISCOUNT")
    readonly lTax: TableField = new TableField("LINEITEM.L_TAX")
    readonly lReturnflag: TableField = new TableField("LINEITEM.L_RETURNFLAG")
    readonly lLinestatus: TableField = new TableField("LINEITEM.L_LINESTATUS")
    readonly lShipdate: TableField = new TableField("LINEITEM.L_SHIPDATE")
    readonly lCommitdate: TableField = new TableField("LINEITEM.L_COMMITDATE")
    readonly lReceiptdate: TableField = new TableField("LINEITEM.L_RECEIPTDATE")
    readonly lShipinstruct: TableField = new TableField("LINEITEM.L_SHIPINSTRUCT")
    readonly lShipmode: TableField = new TableField("LINEITEM.L_SHIPMODE")
    readonly lComment: TableField = new TableField("LINEITEM.L_COMMENT")
    readonly _fields: TableField[] = [this.lOrderkey, this.lPartkey, this.lSuppkey, this.lLinenumber, this.lQuantity, this.lExtendedprice, this.lDiscount, this.lTax, this.lReturnflag, this.lLinestatus, this.lShipdate, this.lCommitdate, this.lReceiptdate, this.lShipinstruct, this.lShipmode, this.lComment]
}

class Nation implements SquashQLTable {
    readonly _name = "NATION"
    readonly nNationkey: TableField = new TableField("NATION.N_NATIONKEY")
    readonly nName: TableField = new TableField("NATION.N_NAME")
    readonly nRegionkey: TableField = new TableField("NATION.N_REGIONKEY")
    readonly nComment: TableField = new TableField("NATION.N_COMMENT")
    readonly _fields: TableField[] = [this.nNationkey, this.nName, this.nRegionkey, this.nComment]
}

class Orders implements SquashQLTable {
    readonly _name = "ORDERS"
    readonly oOrderkey: TableField = new TableField("ORDERS.O_ORDERKEY")
    readonly oCustkey: TableField = new TableField("ORDERS.O_CUSTKEY")
    readonly oOrderstatus: TableField = new TableField("ORDERS.O_ORDERSTATUS")
    readonly oTotalprice: TableField = new TableField("ORDERS.O_TOTALPRICE")
    readonly oOrderdate: TableField = new TableField("ORDERS.O_ORDERDATE")
    readonly oOrderpriority: TableField = new TableField("ORDERS.O_ORDERPRIORITY")
    readonly oClerk: TableField = new TableField("ORDERS.O_CLERK")
    readonly oShippriority: TableField = new TableField("ORDERS.O_SHIPPRIORITY")
    readonly oComment: TableField = new TableField("ORDERS.O_COMMENT")
    readonly _fields: TableField[] = [this.oOrderkey, this.oCustkey, this.oOrderstatus, this.oTotalprice, this.oOrderdate, this.oOrderpriority, this.oClerk, this.oShippriority, this.oComment]
}

class Part implements SquashQLTable {
    readonly _name = "PART"
    readonly pPartkey: TableField = new TableField("PART.P_PARTKEY")
    readonly pName: TableField = new TableField("PART.P_NAME")
    readonly pMfgr: TableField = new TableField("PART.P_MFGR")
    readonly pBrand: TableField = new TableField("PART.P_BRAND")
    readonly pType: TableField = new TableField("PART.P_TYPE")
    readonly pSize: TableField = new TableField("PART.P_SIZE")
    readonly pContainer: TableField = new TableField("PART.P_CONTAINER")
    readonly pRetailprice: TableField = new TableField("PART.P_RETAILPRICE")
    readonly pComment: TableField = new TableField("PART.P_COMMENT")
    readonly _fields: TableField[] = [this.pPartkey, this.pName, this.pMfgr, this.pBrand, this.pType, this.pSize, this.pContainer, this.pRetailprice, this.pComment]
}

class Partsupp implements SquashQLTable {
    readonly _name = "PARTSUPP"
    readonly psPartkey: TableField = new TableField("PARTSUPP.PS_PARTKEY")
    readonly psSuppkey: TableField = new TableField("PARTSUPP.PS_SUPPKEY")
    readonly psAvailqty: TableField = new TableField("PARTSUPP.PS_AVAILQTY")
    readonly psSupplycost: TableField = new TableField("PARTSUPP.PS_SUPPLYCOST")
    readonly psComment: TableField = new TableField("PARTSUPP.PS_COMMENT")
    readonly _fields: TableField[] = [this.psPartkey, this.psSuppkey, this.psAvailqty, this.psSupplycost, this.psComment]
}

class Region implements SquashQLTable {
    readonly _name = "REGION"
    readonly rRegionkey: TableField = new TableField("REGION.R_REGIONKEY")
    readonly rName: TableField = new TableField("REGION.R_NAME")
    readonly rComment: TableField = new TableField("REGION.R_COMMENT")
    readonly _fields: TableField[] = [this.rRegionkey, this.rName, this.rComment]
}

class Supplier implements SquashQLTable {
    readonly _name = "SUPPLIER"
    readonly sSuppkey: TableField = new TableField("SUPPLIER.S_SUPPKEY")
    readonly sName: TableField = new TableField("SUPPLIER.S_NAME")
    readonly sAddress: TableField = new TableField("SUPPLIER.S_ADDRESS")
    readonly sNationkey: TableField = new TableField("SUPPLIER.S_NATIONKEY")
    readonly sPhone: TableField = new TableField("SUPPLIER.S_PHONE")
    readonly sAcctbal: TableField = new TableField("SUPPLIER.S_ACCTBAL")
    readonly sComment: TableField = new TableField("SUPPLIER.S_COMMENT")
    readonly _fields: TableField[] = [this.sSuppkey, this.sName, this.sAddress, this.sNationkey, this.sPhone, this.sAcctbal, this.sComment]
}

const customer = new Customer()
const lineitem = new Lineitem()
const nation = new Nation()
const orders = new Orders()
const part = new Part()
const partsupp = new Partsupp()
const region = new Region()
const supplier = new Supplier()

export {
    customer, lineitem, nation, orders, part, partsupp, region, supplier
}
